// Breakpoints
$breakpoints: (
        'small': 480px,
        'medium': 880px,
        'large': 1366px,
        'xlarge': 1920px,
);

$media-direction: min; // min / max â€” default is min (mobile first)

@mixin breakpoint($breakpoint,$direction: $media-direction) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (#{$direction}-width: #{map-get($breakpoints, $breakpoint)}) {
            @content;
        }
    } @else if unitless($breakpoint) {
        $breakpoint: $breakpoint + 0px;
        @media (#{$direction}-width: $breakpoint) {
            @content;
        }
    }
}

@mixin rest-list() {
    padding: 0;
    margin: 0;
    list-style: none;
}

@mixin absolute-stretch() {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

@mixin text-shadow() {
    text-shadow: 2px 2px black;
}

@mixin hover-gradient() {
    overflow: hidden;
    &::after {
        @include absolute-stretch();
        z-index: 1;
        content: "";
        background: {
            image: linear-gradient(to right, transparent 75%, var(--button-hover-border-color));
        }
        transform: translateX(50%);
        transition: transform 0.3s ease-out;
    }
    &:hover {
        &::before {
            transform: translateX(0);
        }
    }
}

@mixin hover-gradient-base() {
    overflow: hidden;
    &::after {
        @include absolute-stretch();
        z-index: 1;
        content: "";
        background: {
            image: linear-gradient(to right, transparent 75%, var(--cta-color-2));
        }
        transform: translateX(50%);
        transition: transform 0.3s ease-out;
    }
}

@mixin hover-gradient-active() {
    &::after {
        transform: translateX(0);
    }
}

@mixin hover-gradient-inactive() {
    &::after {
        transform: translateX(50%);
    }
}

@function _fix-unicode($unicode) {
    @return unquote("\"") + $unicode + unquote("\"");
}

@mixin icon-font() {
    font: {
        family: "icomoon" !important;
        style: normal;
        variant: normal;
        weight: normal;
    }
    speak: none;
    text: {
        transform: none;
    }
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@mixin icon($name: null, $font-styles: true) {
    content: _fix-unicode($name);
    @if ($font-styles) {
        @include icon-font();
    }
}

@mixin cross-out-icon() {
    &::after {
        z-index: 1;
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        right: 0;
        translate: -50% -50%;
        width: 5px;
        height: 100%;
        rotate: 45deg;
        background: {
            color: var(--cta-color-2);
        }
    }
}

@mixin deco-line-left($blurry: true, $small: false) {
    &::before {
        @include deco-line-base($blurry, $small);
        left: 0;
        translate: -50% -50%;
    }
}

@mixin deco-line-right($blurry: true, $small: false) {
    &::after {
        @include deco-line-base($blurry, $small);
        right: 0;
        translate: 50% -50%;
    }
}

@mixin deco-line-base($blurry, $small) {
    content: "";
    position: absolute;
    top: 50%;
    background: {
        color: var(--cta-color-2);
    }
    @if ($blurry == true) {
        filter: blur(3px);
    }
    @if ($small == true) {
        height: calc(100% - (var(--spacing-default) * 2));
        width: 8px;
        filter: none;
    } @else  {
        height: calc(100% - (var(--spacing-xlarge) * 2));
        width: 12px;
        border: {
            radius: var(--border-radius);
        }
    }
}